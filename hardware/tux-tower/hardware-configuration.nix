# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/profiles/qemu-guest.nix")
    ];

  boot.initrd.availableKernelModules = [ "ahci" "xhci_pci" "sd_mod" "nvme" "usbhid" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [
    "amd_iommu=on"
  #  "video=DP-1:2560x1440@164"
  #  "video=DP-2:2560x1440@164"
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  hardware = {
    enableAllFirmware = true;
    cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    enableRedistributableFirmware = true;
    opengl = {
      driSupport = true;
      driSupport32Bit = true;
      extraPackages = with pkgs; [
        vaapiVdpau
        libvdpau-va-gl
        amdvlk
      ];
      extraPackages32 = with pkgs.pkgsi686Linux; [ 
        libva 
        driversi686Linux.amdvlk
      ];
    };
    #graphics = {
    #  enable = true;
    #  enable32Bit = true;
    #  extraPackages = with pkgs; [
    #    vaapiVdpau
    #    libvdpau-va-gl
    #    amdvlk
    #  ];
    #  extraPackages32 = with pkgs.pkgsi686Linux; [ 
    #    libva 
    #    driversi686Linux.amdvlk
    #  ];
    #  #setLdLibraryPath = true; # FIXME: not working
    #};
  };
}
